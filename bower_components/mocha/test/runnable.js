var mocha=require("../"),Runnable=mocha.Runnable,EventEmitter=require("events").EventEmitter;describe("Runnable(title, fn)",function(){function i(){throw new Error("Don't use global time-related stuff.")}var e=global.setTimeout,t=global.setInterval,n=global.clearTimeout,r=global.clearInterval;beforeEach(function(){global.setTimeout=global.setInterval=global.clearTimeout=global.clearInterval=i}),afterEach(function(){global.setTimeout=e,global.setInterval=t,global.clearTimeout=n,global.clearInterval=r}),describe("#timeout(ms)",function(){it("should set the timeout",function(){var e=new Runnable;e.timeout(1e3),e.timeout().should.equal(1e3)})}),describe("#slow(ms)",function(){it("should set the slow threshold",function(){var e=new Runnable;e.slow(100),e.slow().should.equal(100)})}),describe(".title",function(){it("should be present",function(){(new Runnable("foo")).title.should.equal("foo")})}),describe("when arity >= 1",function(){it("should be .async",function(){var e=new Runnable("foo",function(e){});e.async.should.equal(1),e.sync.should.be.false})}),describe("when arity == 0",function(){it("should be .sync",function(){var e=new Runnable("foo",function(){});e.async.should.be.equal(0),e.sync.should.be.true})}),describe(".run(fn)",function(){describe("when .pending",function(){it("should not invoke the callback",function(e){var t=new Runnable("foo",function(){throw new Error("should not be called")});t.pending=!0,t.run(e)})}),describe("when sync",function(){describe("without error",function(){it("should invoke the callback",function(e){var t=0,n=new Runnable("foo",function(){++t});n.run(function(r){t.should.equal(1),n.duration.should.be.a("number"),e(r)})})}),describe("when an exception is thrown",function(){it("should invoke the callback",function(e){var t=0,n=new Runnable("foo",function(){throw++t,new Error("fail")});n.run(function(n){t.should.equal(1),n.message.should.equal("fail"),e()})})})}),describe("when async",function(){describe("without error",function(){it("should invoke the callback",function(e){var t=0,n=new Runnable("foo",function(e){process.nextTick(e)});n.run(e)})}),describe("when the callback is invoked several times",function(){describe("without an error",function(){it('should emit a single "error" event',function(e){var t=0,n=0,r=new Runnable("foo",function(e){process.nextTick(e),process.nextTick(e),process.nextTick(e),process.nextTick(e)});r.on("error",function(r){++n,r.message.should.equal("done() called multiple times"),t.should.equal(1),n.should.equal(1),e()}),r.run(function(){++t})})}),describe("with an error",function(){it('should emit a single "error" event',function(e){var t=0,n=0,r=new Runnable("foo",function(e){e(new Error("fail")),process.nextTick(e),e(new Error("fail")),process.nextTick(e),process.nextTick(e)});r.on("error",function(r){++n,r.message.should.equal("fail"),t.should.equal(1),n.should.equal(1),e()}),r.run(function(){++t})})})}),describe("when an exception is thrown",function(){it("should invoke the callback",function(e){var t=0,n=new Runnable("foo",function(e){throw new Error("fail")});n.run(function(t){t.message.should.equal("fail"),e()})})}),describe("when an error is passed",function(){it("should invoke the callback",function(e){var t=0,n=new Runnable("foo",function(e){e(new Error("fail"))});n.run(function(t){t.message.should.equal("fail"),e()})})})})})});