suite("utilities",function(){var e=chai.expect;test("_obj",function(){var t="bar",n=e(t);e(n).to.have.property("_obj",t);var r="baz";n._obj=r,e(n).to.have.property("_obj",r),n.equal(r)}),test("transferFlags",function(){var t="bar",n=e(t).not;chai.use(function(r,i){var s={};i.transferFlags(n,s),e(i.flag(s,"object")).to.equal(t),e(i.flag(s,"negate")).to.equal(!0)})}),test("transferFlags, includeAll = false",function(){var t="bar";chai.use(function(t,n){var r={},i=new chai.Assertion({},"message",test),s={};n.flag(r,"flagMe",s),n.flag(r,"negate",!0),n.transferFlags(test,r,!1),e(n.flag(r,"object")).to.equal(undefined),e(n.flag(r,"message")).to.equal(undefined),e(n.flag(r,"ssfi")).to.equal(undefined),e(n.flag(r,"negate")).to.equal(!0),e(n.flag(r,"flagMe")).to.equal(s)})}),test("getPathValue",function(){var t={hello:"universe",universe:{hello:"world"},world:["hello","universe"],complex:[{hello:"universe"},{universe:"world"},[{hello:"world"}]]},n=[[!0]];chai.use(function(r,i){var s=i.getPathValue;e(s("hello",t)).to.equal("universe"),e(s("universe.hello",t)).to.equal("world"),e(s("world[1]",t)).to.equal("universe"),e(s("complex[1].universe",t)).to.equal("world"),e(s("complex[2][0].hello",t)).to.equal("world"),e(s("[0][0]",n)).to.be.true})}),test("addMethod",function(){chai.use(function(t,n){e(t.Assertion).to.not.respondTo("eqqqual"),t.Assertion.addMethod("eqqqual",function(e){var r=n.flag(this,"object");(new t.Assertion(r)).to.be.eql(e)}),e(t.Assertion).to.respondTo("eqqqual")}),e("spec").to.eqqqual("spec")}),test("addMethod returning result",function(){chai.use(function(e,t){e.Assertion.addMethod("result",function(){return"result"})}),e(e("foo").result()).to.equal("result")}),test("overwriteMethod",function(){chai.use(function(t,n){e(t.Assertion).to.respondTo("eqqqual"),t.Assertion.overwriteMethod("eqqqual",function(e){return function(t){var r=n.flag(this,"object");r=="cucumber"&&t=="cuke"?n.flag(this,"cucumber",!0):e.apply(this,arguments)}})});var t=e("cucumber").to.eqqqual("cucumber");e(t.__flags).to.not.have.property("cucumber");var n=e("cucumber").to.eqqqual("cuke");e(n.__flags).to.have.property("cucumber"),chai.use(function(t,n){e(t.Assertion).to.not.respondTo("doesnotexist"),t.Assertion.overwriteMethod("doesnotexist",function(t){return e(t).to.be.a("function"),function(){n.flag(this,"doesnt",!0),t.apply(this,arguments)}})});var r=e("something").to.doesnotexist();e(r.__flags).to.have.property("doesnt")}),test("overwriteMethod returning result",function(){chai.use(function(e,t){e.Assertion.overwriteMethod("result",function(e){return function(){return"result"}})}),e(e("foo").result()).to.equal("result")}),test("addProperty",function(){chai.use(function(e,t){e.Assertion.addProperty("tea",function(){t.flag(this,"tea","chai")})});var t=e("chai").to.be.tea;e(t.__flags.tea).to.equal("chai")}),test("addProperty returning result",function(){chai.use(function(e,t){e.Assertion.addProperty("result",function(){return"result"})}),e(e("foo").result).to.equal("result")}),test("overwriteProperty",function(){chai.use(function(t,n){e(new chai.Assertion).to.have.property("tea"),t.Assertion.overwriteProperty("tea",function(e){return function(){var t=n.flag(this,"object");t==="matcha"?n.flag(this,"tea","matcha"):e.call(this)}})});var t=e("matcha").to.be.tea;e(t.__flags.tea).to.equal("matcha");var n=e("something").to.be.tea;e(n.__flags.tea).to.equal("chai")}),test("overwriteProperty returning result",function(){chai.use(function(e,t){e.Assertion.overwriteProperty("result",function(e){return function(){return"result"}})}),e(e("foo").result).to.equal("result")}),test("getMessage",function(){chai.use(function(t,n){e(n.getMessage({},[])).to.equal(""),e(n.getMessage({},[null,null,null])).to.equal("");var r={};n.flag(r,"message","foo"),e(n.getMessage(r,[])).to.contain("foo")})}),test("addChainableMethod",function(){chai.use(function(t,n){t.Assertion.addChainableMethod("x",function(){(new chai.Assertion(this._obj)).to.be.equal("x")},function(){this._obj=this._obj||{},this._obj.__x="X!"}),e("foo").x.to.equal("foo"),e("x").x(),e(function(){e("foo").x()}).to.throw(t.AssertionError);var r=Object.getOwnPropertyDescriptor(chai.Assertion.prototype,"x");e(r.get).to.have.property("call",Function.prototype.call),e(r.get).to.have.property("apply",Function.prototype.apply),e(r.get()).to.have.property("call",Function.prototype.call),e(r.get()).to.have.property("apply",Function.prototype.apply);var i={};e(i).x.to.be.ok,e(i).to.have.property("__x","X!")})})});