(function(){function t(e,n,r){var i=t.resolve(e);if(null==i){r=r||e,n=n||"root";var s=new Error('Failed to require "'+r+'" from "'+n+'"');throw s.path=r,s.parent=n,s.require=!0,s}var o=t.modules[i];return o.exports||(o.exports={},o.client=o.component=!0,o.call(this,o.exports,t.relative(i),o)),o.exports}var e=Object.prototype.hasOwnProperty;t.modules={},t.aliases={},t.resolve=function(n){var r=n+"/index.js",i=[n,n+".js",n+".json",n+"/index.js",n+"/index.json"];for(var s=0;s<i.length;s++){var n=i[s];if(e.call(t.modules,n))return n}if(e.call(t.aliases,r))return t.aliases[r]},t.normalize=function(e,t){var n=[];if("."!=t.charAt(0))return t;e=e.split("/"),t=t.split("/");for(var r=0;r<t.length;++r)".."==t[r]?e.pop():"."!=t[r]&&""!=t[r]&&n.push(t[r]);return e.concat(n).join("/")},t.register=function(e,n){t.modules[e]=n},t.alias=function(n,r){if(!e.call(t.modules,n))throw new Error('Failed to alias "'+n+'", it does not exist');t.aliases[r]=n},t.relative=function(n){function i(e,t){var n=e.length;while(n--)if(e[n]===t)return n;return-1}function s(e){var r=s.resolve(e);return t(r,n,e)}var r=t.normalize(n,"..");return s.resolve=function(e){if("."!=e.charAt(0)){var s=n.split("/"),o=i(s,"deps")+1;return o||(o=0),e=s.slice(0,o+1).join("/")+"/deps/"+e,e}return t.normalize(r,e)},s.exists=function(n){return e.call(t.modules,s.resolve(n))},s},t.register("mocha-cloud/client.js",function(e,t,n){n.exports=function(e){var t=[];e.on("fail",function(e,n){t.push({title:e.title,fullTitle:e.fullTitle(),error:{message:n.message,stack:n.stack}})}),e.on("end",function(){e.stats.failed=t,global.mochaResults=e.stats})}}),t.alias("mocha-cloud/client.js","mocha-cloud/index.js"),typeof exports=="object"?module.exports=t("mocha-cloud"):typeof define=="function"&&define.amd?define(t("mocha-cloud")):window.cloud=t("mocha-cloud")})();