function testGesture(e,t,n){triggered_events={},faker.triggerGesture(e,function(){var r=t.split(" "),i=Object.keys(triggered_events);_.each(triggered_events,function(e,t){testEventData(t,e)});var s=i.length===r.length,o=e+" detected";s||(o=e+" error. Events thrown: "+i.join(" ")),n(s,o)})}function testEventData(e,t){ok(t.type==e,"ev.type"),ok(_.isObject(t.gesture),"ev.gesture"),ok(t.gesture.eventType,"ev.gesture.eventType"),ok(_.isNumber(t.gesture.angle),"ev.gesture.angle"),ok(_.isObject(t.gesture.center),"ev.gesture.center"),ok(_.isNumber(t.gesture.deltaTime),"ev.gesture.deltatime"),ok(_.isNumber(t.gesture.deltaX),"ev.gesture.deltaX"),ok(_.isNumber(t.gesture.deltaY),"ev.gesture.deltaY"),ok(_.isNumber(t.gesture.distance),"ev.gesture.distance"),ok(t.gesture.direction,"ev.gesture.direction");var n;(n=t.type.match(/up|down|left|right/))&&ok(t.gesture.direction===Hammer["DIRECTION_"+n[0].toUpperCase()]),ok(t.gesture.pointerType,"ev.gesture.pointerType");var r=Hammer.POINTER_TOUCH;if(faker.touch_type==FakeTouches.POINTER_MOUSE_EVENTS||faker.touch_type==FakeTouches.MOUSE_EVENTS)r=Hammer.POINTER_MOUSE;ok(t.gesture.pointerType==r,"not matching pointertype: "+t.gesture.pointerType+":"+r),ok(_.isFunction(t.gesture.preventDefault),"ev.gesture.preventDefault"),ok(_.isNumber(t.gesture.rotation),"ev.gesture.rotation"),ok(_.isNumber(t.gesture.scale),"ev.gesture.scale"),ok(_.isObject(t.gesture.srcEvent),"ev.gesture.srcEvent"),ok(_.isObject(t.gesture.startEvent),"ev.gesture.startEvent"),ok(_.isFunction(t.gesture.stopDetect),"ev.gesture.stopDetect"),ok(_.isFunction(t.gesture.stopPropagation),"ev.gesture.stopPropagation"),ok(_.isElement(t.gesture.target),"ev.gesture.target"),ok(_.isNumber(t.gesture.timeStamp),"ev.gesture.timeStamp"),ok(_.isArray(t.gesture.touches),"ev.gesture.touches"),ok(t.gesture.touches.length>=1,"ev.gesture.touches"),ok(_.isNumber(t.gesture.velocityX),"ev.gesture.velocityX"),ok(_.isNumber(t.gesture.velocityY),"ev.gesture.velocityY")}var el=document.getElementById("toucharea");Hammer.plugins.showTouches(!0);var faker=new FakeTouches(el);set_faketouches_type&&faker.setTouchType(set_faketouches_type);var hammertime=new Hammer(el),all_events=["touch","release","hold","tap","doubletap","dragstart","drag","dragend","dragleft","dragright","dragup","dragdown","swipe","swipeleft","swiperight","swipeup","swipedown","transformstart","transform","transformend","rotate","pinch","pinchin","pinchout"],triggered_events={};hammertime.on(all_events.join(" "),function(e){triggered_events[e.type]=e});var gesture_tests={Hold:"touch hold release",Tap:"touch tap release",DoubleTap:"touch tap doubletap release",DragRight:"touch drag dragstart dragright dragend release",SwipeRight:"touch drag dragstart dragright dragend swipe swiperight release",Rotate:"touch transform transformstart transformend rotate release",PinchIn:"touch transform transformstart transformend pinch pinchin release",PinchOut:"touch transform transformstart transformend pinch pinchout release"};for(var gesture in gesture_tests)gesture_tests.hasOwnProperty(gesture)&&function(e){if(gesture_tests[e].match(/transform/)&&!faker.has_multitouch)return;asyncTest(e,function(){testGesture(e,gesture_tests[e],function(e,t){ok(e,t),start()})})}(gesture);