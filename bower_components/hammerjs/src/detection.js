Hammer.detection={gestures:[],current:null,previous:null,stopped:!1,startDetect:function(t,n){if(this.current)return;this.stopped=!1,this.current={inst:t,startEvent:Hammer.utils.extend({},n),lastEvent:!1,name:""},this.detect(n)},detect:function(t){if(!this.current||this.stopped)return;t=this.extendEventData(t);var n=this.current.inst.options;for(var r=0,i=this.gestures.length;r<i;r++){var s=this.gestures[r];if(!this.stopped&&n[s.name]!==!1&&s.handler.call(s,t,this.current.inst)===!1){this.stopDetect();break}}return this.current&&(this.current.lastEvent=t),t.eventType==Hammer.EVENT_END&&!t.touches.length-1&&this.stopDetect(),t},stopDetect:function(){this.previous=Hammer.utils.extend({},this.current),this.current=null,this.stopped=!0},extendEventData:function(t){var n=this.current.startEvent;if(n&&(t.touches.length!=n.touches.length||t.touches===n.touches)){n.touches=[];for(var r=0,i=t.touches.length;r<i;r++)n.touches.push(Hammer.utils.extend({},t.touches[r]))}var s=t.timeStamp-n.timeStamp,o=t.center.pageX-n.center.pageX,u=t.center.pageY-n.center.pageY,a=Hammer.utils.getVelocity(s,o,u);return Hammer.utils.extend(t,{deltaTime:s,deltaX:o,deltaY:u,velocityX:a.x,velocityY:a.y,distance:Hammer.utils.getDistance(n.center,t.center),angle:Hammer.utils.getAngle(n.center,t.center),direction:Hammer.utils.getDirection(n.center,t.center),scale:Hammer.utils.getScale(n.touches,t.touches),rotation:Hammer.utils.getRotation(n.touches,t.touches),startEvent:n}),t},register:function(t){var n=t.defaults||{};return n[t.name]===undefined&&(n[t.name]=!0),Hammer.utils.extend(Hammer.defaults,n,!0),t.index=t.index||1e3,this.gestures.push(t),this.gestures.sort(function(e,t){return e.index<t.index?-1:e.index>t.index?1:0}),this.gestures}};