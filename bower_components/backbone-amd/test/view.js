$(document).ready(function(){var e;module("Backbone.View",{setup:function(){e=new Backbone.View({id:"test-view",className:"test-view",other:"non-special-option"})}}),test("constructor",6,function(){equal(e.el.id,"test-view"),equal(e.el.className,"test-view"),equal(e.el.other,void 0),equal(e.options.id,"test-view"),equal(e.options.className,"test-view"),equal(e.options.other,"non-special-option")}),test("jQuery",1,function(){var e=new Backbone.View;e.setElement("<p><a><b>test</b></a></p>"),strictEqual(e.$("a b").html(),"test")}),test("initialize",1,function(){var e=Backbone.View.extend({initialize:function(){this.one=1}});strictEqual((new e).one,1)}),test("delegateEvents",6,function(){var e=0,t=0,n=new Backbone.View({el:'<p><a id="test"></a></p>'});n.increment=function(){e++},n.$el.on("click",function(){t++});var r={"click #test":"increment"};n.delegateEvents(r),n.$("#test").trigger("click"),equal(e,1),equal(t,1),n.$("#test").trigger("click"),equal(e,2),equal(t,2),n.delegateEvents(r),n.$("#test").trigger("click"),equal(e,3),equal(t,3)}),test("delegateEvents allows functions for callbacks",3,function(){var e=new Backbone.View({el:"<p></p>"});e.counter=0;var t={click:function(){this.counter++}};e.delegateEvents(t),e.$el.trigger("click"),equal(e.counter,1),e.$el.trigger("click"),equal(e.counter,2),e.delegateEvents(t),e.$el.trigger("click"),equal(e.counter,3)}),test("delegateEvents ignore undefined methods",0,function(){var e=new Backbone.View({el:"<p></p>"});e.delegateEvents({click:"undefinedMethod"}),e.$el.trigger("click")}),test("undelegateEvents",6,function(){var e=0,t=0,n=new Backbone.View({el:'<p><a id="test"></a></p>'});n.increment=function(){e++},n.$el.on("click",function(){t++});var r={"click #test":"increment"};n.delegateEvents(r),n.$("#test").trigger("click"),equal(e,1),equal(t,1),n.undelegateEvents(),n.$("#test").trigger("click"),equal(e,1),equal(t,2),n.delegateEvents(r),n.$("#test").trigger("click"),equal(e,2),equal(t,3)}),test("_ensureElement with DOM node el",1,function(){var e=Backbone.View.extend({el:document.body});equal((new e).el,document.body)}),test("_ensureElement with string el",3,function(){var e=Backbone.View.extend({el:"body"});strictEqual((new e).el,document.body),e=Backbone.View.extend({el:"#testElement > h1"}),strictEqual((new e).el,$("#testElement > h1").get(0)),e=Backbone.View.extend({el:"#nonexistent"}),ok(!(new e).el)}),test("with className and id functions",2,function(){var e=Backbone.View.extend({className:function(){return"className"},id:function(){return"id"}});strictEqual((new e).el.className,"className"),strictEqual((new e).el.id,"id")}),test("with options function",3,function(){var e=Backbone.View.extend({options:function(){return{title:"title1",acceptText:"confirm"}}}),t=e.extend({options:function(){return _.extend(e.prototype.options.call(this),{title:"title2",fixed:!0})}});strictEqual((new t).options.title,"title2"),strictEqual((new t).options.acceptText,"confirm"),strictEqual((new t).options.fixed,!0)}),test("with attributes",2,function(){var e=Backbone.View.extend({attributes:{id:"id","class":"class"}});strictEqual((new e).el.className,"class"),strictEqual((new e).el.id,"id")}),test("with attributes as a function",1,function(){var e=Backbone.View.extend({attributes:function(){return{"class":"dynamic"}}});strictEqual((new e).el.className,"dynamic")}),test("multiple views per element",3,function(){var e=0,t=$("<p></p>"),n=Backbone.View.extend({el:t,events:{click:function(){e++}}}),r=new n;t.trigger("click"),equal(1,e);var i=new n;t.trigger("click"),equal(3,e),r.delegateEvents(),t.trigger("click"),equal(5,e)}),test("custom events, with namespaces",2,function(){var e=0,t=Backbone.View.extend({el:$("body"),events:function(){return{"fake$event.namespaced":"run"}},run:function(){e++}}),n=new t;$("body").trigger("fake$event").trigger("fake$event"),equal(e,2),$("body").unbind(".namespaced"),$("body").trigger("fake$event"),equal(e,2)}),test("#1048 - setElement uses provided object.",2,function(){var e=$("body"),t=new Backbone.View({el:e});ok(t.$el===e),t.setElement(e=$(e)),ok(t.$el===e)}),test("#986 - Undelegate before changing element.",1,function(){var e=$("<button></button>"),t=$("<button></button>"),n=Backbone.View.extend({events:{click:function(e){ok(r.el===e.target)}}}),r=new n({el:e});r.setElement(t),e.trigger("click"),t.trigger("click")}),test("#1172 - Clone attributes object",2,function(){var e=Backbone.View.extend({attributes:{foo:"bar"}}),t=new e({id:"foo"});strictEqual(t.el.id,"foo");var n=new e;ok(!n.el.id)}),test("#1228 - tagName can be provided as a function",1,function(){var e=Backbone.View.extend({tagName:function(){return"p"}});ok((new e).$el.is("p"))}),test("views stopListening",0,function(){var e=Backbone.View.extend({initialize:function(){this.listenTo(this.model,"all x",function(){ok(!1)},this),this.listenTo(this.collection,"all x",function(){ok(!1)},this)}}),t=new e({model:new Backbone.Model,collection:new Backbone.Collection});t.stopListening(),t.model.trigger("x"),t.collection.trigger("x")}),test("Provide function for el.",1,function(){var e=Backbone.View.extend({el:function(){return"<p><a></a></p>"}}),t=new e;ok(t.$el.is("p:has(a)"))}),test("events passed in options",2,function(){var e=0,t=Backbone.View.extend({el:'<p><a id="test"></a></p>',increment:function(){e++}}),n=new t({events:{"click #test":"increment"}}),r=new t({events:function(){return{"click #test":"increment"}}});n.$("#test").trigger("click"),r.$("#test").trigger("click"),equal(e,2),n.$("#test").trigger("click"),r.$("#test").trigger("click"),equal(e,4)})});